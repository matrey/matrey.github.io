{"hash":"7ddacdcd2aa86913199a1c494f3cc2d236efdde9","data":{"tag":{"title":"cloud","belongsTo":{"edges":[{"node":{"title":"Build your own Ubuntu AMI","path":"/articles/build-your-own-ubuntu-ami/","date":"15 October 2020","last_update":null,"timeToRead":13,"description":"Sure, you could use the official Ubuntu AMI, or leverage Packer to hide the details. But where is the learning in that?","content":"<p><strong>TL;DR Scripts are available here: <a href=\"https://gist.github.com/matrey/66d697ef540f0da8933a341524ea9fd7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/matrey/66d697ef540f0da8933a341524ea9fd7</a></strong></p>\n<p>The steps in this article are run from an EC2 instance in the same region you want your AMI to be registered into. This builder VM should have the same architecture &#x26; OS as the image you intend to build.\nYou can use the official Ubuntu AMI the first time, then use your own Ubuntu AMI for subsequent builds.</p>\n<p><em>Note that the following focuses on building an Ubuntu <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">bionic</code> (18.04 LTS) AMI, as it has been my work horse for the past 2 years, and is still supported for another couple of years.\nBut if you are starting fresh, you should probably aim at <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">focal</code> (20.04 LTS).</em></p>\n<h2 id=\"leverage-ubuntu-cloud-images\"><a href=\"#leverage-ubuntu-cloud-images\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Leverage Ubuntu Cloud Images</h2>\n<p>Rather than attempting to build an image from scratch, we will start with a ready made image from <a href=\"https://cloud-images.ubuntu.com\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://cloud-images.ubuntu.com</a></p>\n<p>Given a codename (e.g. <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">bionic</code> or <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">focal</code>) we need to identify the most recent release available.</p>\n<p>Ubuntu publishes release data in simple streams format. You can read more about it on <a href=\"https://github.com/smoser/talk-simplestreams/blob/master/Notes.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/smoser/talk-simplestreams/blob/master/Notes.txt</a></p>\n<p>The following can be used to find the most recent <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">bionic</code> build:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">$ sudo apt install simplestreams</span>\n<span style=\"color: #D8DEE9FF\">$ sstream-query --no-verify --json --max=1 https://cloud-images.ubuntu.com/releases/streams/v1/com.ubuntu.cloud:released:download.sjson arch=amd64 release=</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">bionic</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> ftype=</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">disk1.img</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #D8DEE9FF\">[</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">aliases</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">18.04,b,bionic</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">arch</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">amd64</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">content_id</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">com.ubuntu.cloud:released:download</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">datatype</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">image-downloads</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">format</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">products:1.0</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ftype</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">disk1.img</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">item_name</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">disk1.img</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">item_url</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">https://cloud-images.ubuntu.com/releases/server/releases/bionic/release-20201014/ubuntu-18.04-server-cloudimg-amd64.img</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">label</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">release</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">license</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">http://www.canonical.com/intellectual-property-policy</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">md5</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">9aa011b2b79b1fe42a7c306555923b1b</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">os</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ubuntu</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">path</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">server/releases/bionic/release-20201014/ubuntu-18.04-server-cloudimg-amd64.img</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">product_name</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">com.ubuntu.cloud:server:18.04:amd64</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">pubname</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ubuntu-bionic-18.04-amd64-server-20201014</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">release</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">bionic</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">release_codename</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Bionic Beaver</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">release_title</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">18.04 LTS</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">sha256</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">9fdd8fa3091b8a40ea3f571d3461b246fe4e75fbd329b217076f804c9dda06a3</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">size</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">359923712</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">support_eol</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">2023-04-26</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">supported</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">True</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">updated</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Wed, 14 Oct 2020 18:20:34 +0000</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">version</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">18.04</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">version_name</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">20201014</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">]</span></code></pre>\n<p>However, it feels a bit overkill for what we need, and fortunately, there is also a \"low tech\" option available, relying on some text files at specific URLs.</p>\n<p>There is a section at the bottom of <a href=\"https://help.ubuntu.com/community/UEC/Images\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://help.ubuntu.com/community/UEC/Images</a> explaining how these text files work:</p>\n<blockquote>\n<h4 id=\"machine-consumable-ubuntu-cloud-guest-images-availability-data\"><a href=\"#machine-consumable-ubuntu-cloud-guest-images-availability-data\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Machine Consumable Ubuntu Cloud Guest images Availability Data</h4>\n<p>In order to provide information about what builds are available for download or running on ec2, a 'query' interface is exposed at <a href=\"http://cloud-images.ubuntu.com/query\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">http://cloud-images.ubuntu.com/query</a> . This will allow users of the service to download images or find out the latest ec2 AMIs programmatically.</p>\n<p>The data is laid out as follows:</p>\n<p>There are 2 files in top level director 'daily.latest.txt' and 'released.latest.txt'. Each of these files contains tab delimited data, with 4 fields per record. daily.latest.txt has information about the daily builds, released.latest.tt about released builds:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">suite</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">build_name</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">label</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\">     </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">serial</span><span style=\"color: #81A1C1\">&gt;</span>\n<span style=\"color: #D8DEE9FF\">hardy   server       release     20100128</span></code></pre>\n<p>For each record in the top level files another set of files will exist:</p>\n<ul>\n<li><code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">&lt;suite&gt;/&lt;build_name&gt;/released-dl.current.txt</code> downloadable images data for the most recent released build</li>\n<li>[...]</li>\n</ul>\n<p>The downloadable image data files contain 7 tab delimited fields:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">suite</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\">  </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">build_name</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">label</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">serial</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">arch</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">download_path</span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&lt;</span><span style=\"color: #D8DEE9FF\">suggested_name</span><span style=\"color: #81A1C1\">&gt;</span>\n<span style=\"color: #D8DEE9FF\">maverick server       daily   20100826 i386   server/maverick/20100826/maverick-server-uec-i386.tar.gz  ubuntu-maverick-daily-i386-server-20100826</span></code></pre>\n</blockquote>\n<p>We are interested in the \"released\" version, not the \"daily\" builds.\nSo we just need to download <a href=\"https://cloud-images.ubuntu.com/query/bionic/server/released-dl.current.txt\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://cloud-images.ubuntu.com/query/bionic/server/released-dl.current.txt</a> and grep for our architecture:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">$ curl -Ss </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">https://cloud-images.ubuntu.com/query/bionic/server/released-dl.current.txt</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> grep amd64 </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> tr </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">\\t</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">\\n</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #D8DEE9FF\">bionic</span>\n<span style=\"color: #D8DEE9FF\">server</span>\n<span style=\"color: #D8DEE9FF\">release</span>\n<span style=\"color: #D8DEE9FF\">20201014</span>\n<span style=\"color: #D8DEE9FF\">amd64</span>\n<span style=\"color: #D8DEE9FF\">server/releases/bionic/release-20201014/ubuntu-18.04-server-cloudimg-amd64.tar.gz</span>\n<span style=\"color: #D8DEE9FF\">ubuntu-bionic-18.04-amd64-server-20201014</span></code></pre>\n<p>Note that we could also directly take a blind shot and download from <a href=\"https://cloud-images.ubuntu.com/releases/bionic/release/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://cloud-images.ubuntu.com/releases/bionic/release/</a>, which always points to the latest release. But:</p>\n<ul>\n<li>knowing the build date helps validate the most recent image is newer than what we already have (2 to 3 weeks can elapse between 2 \"released\" images)</li>\n<li>we would need to rely on a hardcoded name fragment, e.g. \"ubuntu-18.04-server-cloudimg-amd64\" for <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">bionic</code></li>\n</ul>\n<h2 id=\"convert-the-image\"><a href=\"#convert-the-image\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Convert the image</h2>\n<p>Column 6 of \"released-dl.current.txt\" provides us the \"download_path\", with a URI ending in \".tar.gz\":</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">server/releases/bionic/release-20201014/ubuntu-18.04-server-cloudimg-amd64.tar.gz</span></code></pre>\n<p>According to the directory listing, this is in a \"Cloud Image/EC2 tarball\" format. </p>\n<p>However... I never got a booting instance this way, so instead we will go for the \".img\" version, which un-helpfully reads \"USB image\", but is actually a qcow2 disk image.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1510 576' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-26234537c048fd91a6312025aa184dc0'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-26234537c048fd91a6312025aa184dc0)' width='1510' height='576' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAIAAADF1mwTAAAACXBIWXMAAA7EAAAOxAGVKw4bAAALGUlEQVRYw2WXd3MbRxLF9f0/h%2buqfOWz7/6zfRJFEjlRYgCBzXk2zGwAQARSlH2/GdAuy6casWYnLPr1637d%2b%2b542Mdx3Nb1VtVd3WzrppOqq9S2aTZ1vWu7Xdd1ihWpt1Td5KXeUjXrrDBhkSubujk87aSsyiLv2iZLEyGyosiLXBz2T02tyrJoa8UKcyUrDnKMeS4EjxxrG8UVWVVtU/PIIvucqapSmqGPFTm7p%2bMBs8/j3XH/pO/UdRUlVZw1olBZIdO8FkUVZXVeYlwVpYUfl2FaBEnux2yVUQoSfTIWRRDLRDB52m6zLA19rywK33PDwI%2biMI6iw37f1JItsNm2lSaxSFMOsIJJvu9ptFmqZOk6DutAdV3Hd%2b2Cf7kIw8C1rSgMkphX%2brnInk9/AQCatbsGep0K7G6KEvuYtGWleCwrfCxTAQYWZZKBpCn0FizVogRGU0hwYv3pdMA4fglv%2ba4TBD4/mMTx/mn7uHzwfR8/%2b56Xi5Sf4xjWybLApizlXwIAz3O5r6/7Xhz6VVlCKK%2bMeE8SgzMKQrzwDQPP%2bye738vWa%2bzQFhu/YhkADB4JANarEAACAPBgtkRbabsB3ORVJ%2bv9bguZeZbGYcivAgB/4S0MetptAyyLIw3ANwCyNArDMtcAAEkUgVxVpee6b9c5H/pQAQZoDAMPFBoAsHPxDYCX4%2bHDT/9a39zgUewzAHJGV0r%2btqUGQIRUYaJ5iDOiiDNvAESh54nY73a4n1g3TtIMeAYAQWIY2Pmegx1VIfAx1otMA8OXVZkHhBDHDAAiBxMrTQsWB0Q/AM4MkKipiaG/M/Dly8uP//n3/f39ppBVIvA9dkttunZzU0q8axyfaBixDiFMhyVoIZvJ4NPz8XjU7zoD4DcqDcDG2eco2nSN5zjAgAFMFFliGNC%2b1M4%2bA4gNAMfRJpYFOKPAY0I6ATXUeEIO8cK/M8CvgnLTtlh5zl0sOyeDyQHZGQbeAEQwEKNI0gRbbegCDy85A3hzEhY4FuGOlWEQkANYbJL4jYHsDAAGTFYYAiJVFX8ycAaAYbwK6gJfR2BKePp%2bIcTpr0n8fDoOBn1AtqL8M4lxcFuck1gipioxSWykhhBqK8UBUhnGjGSJPwEIHUMResdP8rv8Km8%2baKEriAGtOZ5LYpwZIBgINpMDmoP6nMRGAwihyDAJGP2OwAMiiR6SOUXxbQi9PP/z%2b%2b9vP33aEJBRqiUIQxMcXBAwf5VRrIeH3I26smILGJCgC8Jme3aJZoDI9ZDR3LXXpIGWPc/bbjpygN8uRGZkNNLBoLM5K3OB1w0BIQzYFry5RZ47th14Tml0lLAhIElkzngaf4rTvwHwww8/3N3e7lRzzlqtkjCAjIpCJzHVRgurgBCVCkCyyBbZAjYw7LrNOQeOhyctO7FmINayrQ3FbagQcY%2bPjeYQ%2brrAsQvOmpNRyC2MrlWFlVqOlNSqr5NY17vMxCVCm2t%2bYzj5VkaPh8Vijng15K5OYl0EQEIs8QgYkhh/l6ZaQQWFDGwQwryFnDA9VwD9uj%2bTmEpkW6aWaQoMAwh8dPY3konLQ5OOpc4BXdGATYDheKJcp5BmTxdE5qBChQlFMPM2aPy2Eh/2StXbzZaARny0jIKBED/XAZK4biqdxKn%2ba2T0zEyn9HqDj5IsD5IyyphTofi90ggilSuMNAT0tSxzcqDCRJJYkMSZoYKo1TWLnACTlKWD3eY6oYL0FCaLeQlnIq1CkanE3yYx/31rRarXQayCuEnSOkwYXSZUGLdZvskL5UeV4/Mo/ai0/ZZykWQd5YIDzONUP4qchkEQqY4tszRYPYa2lWCQbe1qFVMWXKdKYn%2b9EqEvojDx3CpJqjQO7DW3eFRZ4j4%2bxq7NIrdSDqQcSBLfS8kTAJhC9vc6cGLv43s5nTaDUT0ct%2bNpPZww6SbTejBup/Pt4kYNRrI3bEYT1RtWV4OG3em8m83rwWgznXOlGU83s/nz%2blEMevHVpZxOwg/vo8uP6fVVcnX1dH/HJBv0q/EouLgoR8NiNEx71%2bVopGaT%2bPIyHw7FoN/dLKKry%2bTqsp7N/A/veYOazZr5nJP%2b%2b/%2bm//01pZH4/0p8sta29SiUUqbhq0nlitSqm6aVpaJSddudLGSREfiyzKs8Ldq2Y3L6%2bvXl999Pv309/vZ6MuPw5QWpJ93oM3UnQD4QUSLbnY7Iu5%2bmzW4bEj1VGecCkSqaRsiKtpNGp2zbQlUrzw0QWSXrTbd07KKul7blpcmX33//6nlfnnavX19fv7y8PJ/QnrMWvTt6bj0a7e7u6v4Q32t3jibNcNJNZ/rRMMCWvB5Ai%2boPq8t%2bO5lCSDuZbRY3p%2bXy9Pg2jo/LfNjH2bgwvPgAFWcGDssHvJ71e%2b3NgsXCzP33mnY4yYcDFtVsKicjD0/DzHjMSe5CC1vleNQs5rLXU6Y1MtWjwA/nvloXsv7FRWhZHaXKjwjoOkpUmJAM%2bjHJ/siBgMfKC0vH5wATFsmBQ9ceN93b6FpBC%2b3YFU21tWKSmNDnjCSUPbfF946do4kI%2b8N9mSZFFPCor6RJGYfW/V3kOnkUNrlIHCuwLG6RUTW00IQbtUV2yQSaDgIG43Ud%2bPGnH%2b/v7jal0r0QRUCXZF0HtCgZFZJG/hEl9DT3E86w/vL6woDFv4w9eRa89UKOHxgVCoPNtiN2I3SiUYgJdiRJZNkWjQ5zhu600aBCWMCOwzwXdS0f4K0sM91q6zqH3b4ubeD1HNtChS1rTZPw7vXl%2bR/fffdpsdjpblQ0pheqdSvxVgc2UinTjSrdSqQlrYT%2bVBD6TCmPTzvk/zz4IstNw6U7HGqnaQeoQfvdhtZIfyfQe/I9kCZZEmNFKQQrKEtmVuhVXceOdS%2bUx1r7HeoGgxoVB7qtosxTL%2bjYu6bmS23TtTSI707Pp88PD3xiNADAtZKPPyayaxrSum26TbeR6DUdHs0P3Vect6ops6JMi1rWh5fn4x/j8HyixlJ%2bq6b2sADlJ4mTZHfY8xhlGRxjCNWLLpSOVH8j1tKPo4yemW/Illuhua5YBFPZ1LwqyTNtOOUjF5R3br18fT2ejmctenfkC/XmZnd/LwdjNZo203k9nqnxtJ0veGxnN5tPt2yVvaEaz%2bRgVFwN2vlN1R%2bV18N6MmdLXPTyq0E9nZ8cKxsNw%2bsruZh7Fx%2bCq8uod83j0Vq3nz8lw0E1m7ofP4jxiMFWMZ3Kxcy//Cgm47jfr2/m7scLzlfzuXPxPrq%2blIsFr2IruPoYD/rJoG92Z6%2bee2zq4xnAab0K7z6VSdKEcRMlbZxQzsjOjgoV6XK2zYuafPVCHs8VrTXFjhL2JNVeyb3%2bq6hix64Rvpc4jqKQPS4RBl3ILGunJHUtNuvsljQ/VC5H1zWSm7xPXFelSSPSyNQv5rpDWq/KOOJ7h5XYWvOeAvb4/gx8BQBrrWnfP707IQv9a0hQ1Cnt8gW%2bZMCA/IMBNZxUvaEcTjQV/VG3uOEYLB1Wq2fHPtnWefDS3PgSt%2bGquNdLhwM8vVveex8vcOHm/i7u9ziT9HvrX37Fwfl4VEwnZzby8XD1889cz8aj7cN9xt1%2br5iMVr/8kvSvxWQCXeH1dTQYyNHw4NhvAGDh4fYGIahsv3B8QrJy0cqgDuPCDhScZHlpeWJps5uvvfTBQkbj29W2ks9k8GZz3L6Nw6YLaceWDyKO1refrYd7d/XoPD5ua%2bk%2bLn28G7jL2880CzEfv4/LlH4ujlZ3dzyyK7Pk8e6W67RND59u7Ie7Ik1QTW%2b9Wt/duquVT81dLuk7Xt%2baXz3%2bB/r1BGUB38R%2bAAAAAElFTkSuQmCC' /%3e%3c/svg%3e\" width=\"1510\" alt=\"Listing of amd64 cloud image formats\" data-srcset=\"/assets/static/2020-10-15-cloud-images.82a2fbd.3a26d9e96bc184c7dcbc01439124f7b9.png 480w, /assets/static/2020-10-15-cloud-images.cbab2cf.3a26d9e96bc184c7dcbc01439124f7b9.png 1024w, /assets/static/2020-10-15-cloud-images.286da2b.3a26d9e96bc184c7dcbc01439124f7b9.png 1510w\" data-sizes=\"(max-width: 1510px) 100vw, 1510px\" data-src=\"/assets/static/2020-10-15-cloud-images.286da2b.3a26d9e96bc184c7dcbc01439124f7b9.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/2020-10-15-cloud-images.286da2b.3a26d9e96bc184c7dcbc01439124f7b9.png\" width=\"1510\" alt=\"Listing of amd64 cloud image formats\"></noscript></p>\n<p>First, we need to convert the qcow2 image into raw. Note that where qcow2 images are \"sparse\" (unused disk space doesn't count), raw images require the same amount of space as their size (i.e. several GB).</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">$ sudo apt-get install qemu-utils</span>\n<span style=\"color: #D8DEE9FF\">$ qemu-img convert -O raw ubuntu-18.04-server-cloudimg-amd64.img ubuntu-18.04-server-cloudimg-amd64.raw</span></code></pre>\n<p>The raw image is ready to \"burn\" into an EBS volume. We will leverage the AWS CLI for the following steps.</p>\n<h2 id=\"make-the-ami\"><a href=\"#make-the-ami\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Make the AMI</h2>\n<p>Here is a high-level overview of what we need to do:</p>\n<ul>\n<li>Create a new EBS volume</li>\n<li>Attach the new EBS to the current instance managing the build</li>\n<li>Use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">dd</code> to write the raw image to the volume</li>\n<li>Detach the volume</li>\n<li>Request a snapshot of the volume and wait until it is completed</li>\n<li>Delete the volume</li>\n<li>Register the snapshot as an AMI</li>\n</ul>\n<p>We will need to create an IAM policy that allows these actions through AWS APIs, without exposing the account too much.\nGranularity is not too great, and the way I found to lock down actions as much as possible relies on tags (on the builder instance and on the volume &#x26; snapshot).</p>\n<ul>\n<li>The builder VM should have a tag \"WithRole=amibuilder\"</li>\n<li>We will give the same tag to the temporary EBS volume we will write the image onto</li>\n</ul>\n<p>While not as tightly locked down as I would have liked, restricting permissions this way still has the nice side-effect of preventing some mistakes (e.g. can't detach the wrong volume from a different instance)</p>\n<p>Here is the IAM policy I ended up with:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Version</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">2012-10-17</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Statement</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: [</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Effect</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Allow</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Action</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: [</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:RegisterImage</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:DescribeVolumes</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateSnapshot</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:DescribeSnapshots</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateVolume</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">            ],</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Resource</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">*</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Effect</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Allow</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Action</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: [</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:DetachVolume</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:AttachVolume</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:DeleteVolume</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">            ],</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Resource</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">*</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Condition</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">StringEquals</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:ResourceTag/WithRole</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">amibuilder</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Effect</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Allow</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Action</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateTags</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Resource</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">arn:aws:ec2:*:*:volume/*</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Condition</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">StringEquals</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateAction</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">CreateVolume</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Effect</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Allow</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Action</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateTags</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Resource</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">arn:aws:ec2:*:*:snapshot/*</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">,</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Condition</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">StringEquals</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">{</span>\n<span style=\"color: #D8DEE9FF\">                    </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ec2:CreateAction</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\">: </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">CreateSnapshot</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">                </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">            </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">        </span><span style=\"color: #ECEFF4\">}</span>\n<span style=\"color: #D8DEE9FF\">    ]</span>\n<span style=\"color: #ECEFF4\">}</span></code></pre>\n<p>Subsequent steps rely on the AWS cli. Setup instructions are provided at: <a href=\"https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://docs.aws.amazon.com/cli/latest/userguide/install-cliv2-linux.html</a></p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">curl </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> -o </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">awscliv2.zip</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">unzip awscliv2.zip</span>\n<span style=\"color: #D8DEE9FF\">sudo ./aws/install</span>\n<span style=\"color: #D8DEE9FF\">rm -rf aws awscliv2.zip </span></code></pre>\n<p>We want to create a volume just big enough for our raw image. So for that, we need to check the image size, and the trick is to use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">du --apparent-size</code> (on some <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">bionic</code> raw image, <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">du</code> returned 1.1 GB whereas <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">du --apparent-size</code> returned a more proper 2.2 GB). And using <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">--block-size=1G</code> directly gives us a value rounded up to the next GB.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">$ SIZE=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\"> du --block-size=1G --apparent-size </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ubuntu-18.04-server-cloudimg-amd64.raw</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #A3BE8C\"> cut -f 1 </span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">$ aws ec2 create-volume --tag-specifications </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">ResourceType=volume,Tags=[{Key=WithRole,Value=amibuilder},{Key=Name,Value=\"AMI building\"}]</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> --availability-zone </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ap-southeast-1</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --size </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">SIZE</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --volume-type gp2 --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">VolumeId</span><span style=\"color: #ECEFF4\">'</span></code></pre>\n<p>Once the volume is created, we need to attach it to our builder instance. But it's not really obvious where it will end up: <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/dev/sd{x}</code>? <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/dev/xvd{x}</code>? <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/dev/nvme{x}n{y}</code>?\nWe will use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">lsblk</code> before attaching the volume, then after attaching it, and compare the two, to figure out where the new volume landed.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">lsblk --json </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> jq --raw-output .blockdevices[].name </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> sort </span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-before.txt</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">cp </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-before.txt</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-after.txt</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #D8DEE9FF\">instance_id=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\">curl -L -Ss http://169.254.169.254/latest/meta-data/instance-id</span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">aws ec2 attach-volume --device /dev/sdi --instance-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">instance_id</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --volume-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">volumeid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">State</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #D8DEE9FF\"> </span>\n<span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> cmp </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-before.txt</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-after.txt</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\">/dev/null </span><span style=\"color: #81A1C1\">2&gt;</span><span style=\"color: #D8DEE9FF\">/dev/null</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">do</span>\n<span style=\"color: #D8DEE9FF\">  lsblk --json </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> jq --raw-output .blockdevices[].name </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> sort </span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-after.txt</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">  sleep 3</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">done</span>\n\n<span style=\"color: #4C566A\"># If we are here, it means a new device appeared</span>\n<span style=\"color: #D8DEE9FF\">NEWDEV=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\"> comm -13 </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-before.txt</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">TMPDIR</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">/volumes-after.txt</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #A3BE8C\"> head -n1 </span><span style=\"color: #ECEFF4\">)</span>\n<span style=\"color: #D8DEE9FF\">dev=/dev/</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">NEWDEV</span><span style=\"color: #81A1C1\">}</span></code></pre>\n<p>As an extra precaution, in the case of NVMe volumes, we can actually query the \"sn\" attribute and confirm it matches the ID returned by <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">ec2 create-volume</code>.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">$ sudo apt-get install nvme-cli</span>\n<span style=\"color: #D8DEE9FF\">$ nvme id-ctrl </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">/dev/</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">DEVICE_NAME</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output-format=json </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> jq --raw-output .sn </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> sed -e </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">s/vol/vol-/</span><span style=\"color: #ECEFF4\">'</span></code></pre>\n<p>We then just <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">dd</code> the raw image onto the device</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">dd if=</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ubuntu-18.04-server-cloudimg-amd64.raw</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> of=</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">dev</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> bs=8M</span></code></pre>\n<p>Then run the rest of the API calls to detach the volume and make a snapshot of it. Note that snapshots are fairly slow, it's not uncommon to have to wait several minutes, even for a tiny 4 GB volume.\nOnce we have the snapshot, we can delete the volume.</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Detach the volume</span>\n<span style=\"color: #D8DEE9FF\">aws ec2 detach-volume --volume-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">volumeid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">State</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> aws ec2 describe-volumes --volume-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">volumeid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">Volumes[*].State</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> grep -v -q available</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">do</span>\n<span style=\"color: #D8DEE9FF\">  sleep 3</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">done</span>\n\n<span style=\"color: #4C566A\"># Create a snapshot of the volume</span>\n<span style=\"color: #D8DEE9FF\">snapshotid=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\">aws ec2 create-snapshot --tag-specifications </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">ResourceType=snapshot,Tags=[{Key=Name,Value=\"For AMI\"}]</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\"> --description </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">LABEL</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --volume-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">volumeid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">SnapshotId</span><span style=\"color: #ECEFF4\">')</span>\n<span style=\"color: #81A1C1\">while</span><span style=\"color: #D8DEE9FF\"> aws ec2 describe-snapshots --snapshot-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">snapshotid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">Snapshots[*].State</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> grep -q pending</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">do</span>\n<span style=\"color: #D8DEE9FF\">  sleep 10</span><span style=\"color: #81A1C1\">;</span>\n<span style=\"color: #81A1C1\">done</span>\n\n<span style=\"color: #4C566A\"># We can now delete the volume</span>\n<span style=\"color: #D8DEE9FF\">aws ec2 delete-volume --volume-id </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">volumeid</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> --output text</span></code></pre>\n<p>Finally, we register the snapshot as an AMI. </p>\n<p>If you want to have a nice logo in the AMI list, make sure to include \"ubuntu\" somewhere into the AMI name.\nThanks <a href=\"https://www.turnkeylinux.org/comment/12501\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.turnkeylinux.org/comment/12501</a>:</p>\n<blockquote>\n<p>AWS automatically 'determine' the platform by parsing the image name. So, if Ubuntu is included in the image name, the platform will be Ubuntu. If Redhat is included in the name, the platform will be Redhat. It's just for show...</p>\n</blockquote>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Register the snapshot as a new AMI</span>\n<span style=\"color: #D8DEE9FF\">block_device_mapping=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\">cat </span><span style=\"color: #81A1C1\">&lt;&lt;EOF</span>\n<span style=\"color: #A3BE8C\">[</span>\n<span style=\"color: #A3BE8C\">  {</span>\n<span style=\"color: #A3BE8C\">    \"DeviceName\": \"/dev/sda1\",</span>\n<span style=\"color: #A3BE8C\">    \"Ebs\": {</span>\n<span style=\"color: #A3BE8C\">      \"DeleteOnTermination\": false, </span>\n<span style=\"color: #A3BE8C\">      \"SnapshotId\": \"$snapshotid\",</span>\n<span style=\"color: #A3BE8C\">      \"VolumeSize\": $SIZE,</span>\n<span style=\"color: #A3BE8C\">      \"VolumeType\": \"gp2\"</span>\n<span style=\"color: #A3BE8C\">    }</span>\n<span style=\"color: #A3BE8C\">  }, {</span>\n<span style=\"color: #A3BE8C\">    \"DeviceName\": \"/dev/sdb\",</span>\n<span style=\"color: #A3BE8C\">    \"VirtualName\": \"ephemeral0\"</span>\n<span style=\"color: #A3BE8C\">  }</span>\n<span style=\"color: #A3BE8C\">]</span>\n<span style=\"color: #81A1C1\">EOF</span>\n<span style=\"color: #ECEFF4\">)</span>\n\n<span style=\"color: #D8DEE9FF\">amiid=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\">aws ec2 register-image --name </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">LABEL</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --ena-support --description </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">LABEL</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --architecture x86_64 --virtualization-type hvm --block-device-mapping </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">block_device_mapping</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --root-device-name </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">/dev/sda1</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\"> --output text --query </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">ImageId</span><span style=\"color: #ECEFF4\">')</span>\n<span style=\"color: #88C0D0\">echo</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">Published AMI </span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">amiid</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\"> in region </span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">AWS_DEFAULT_REGION</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span></code></pre>\n<p>That's it! You are now able to use your own AMI! Which is... pretty much identical to the official Ubuntu AMI. So what's the point?</p>\n<p>Building our own AMIs actually allows us to customize them.</p>\n<h2 id=\"customize-the-ami\"><a href=\"#customize-the-ami\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Customize the AMI</h2>\n<p>Once you have the raw image, you can actually attach it to a loop device, mount it, and edit it.\nFor that we will use <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">losetup</code>:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">devloop=</span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\"> losetup -f </span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #4C566A\"># e.g. /dev/loop0</span>\n<span style=\"color: #D8DEE9FF\">losetup -f -P </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">ubuntu-18.04-server-cloudimg-amd64.raw</span><span style=\"color: #ECEFF4\">\"</span>\n\n<span style=\"color: #D8DEE9FF\">MOUNTPOINT=/mount/image</span>\n<span style=\"color: #D8DEE9FF\">mkdir -p </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">mount </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">devloop</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #A3BE8C\">p1</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #ECEFF4\">\"</span></code></pre>\n<p>Next, in order to run our custom script in a <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">chroot</code>, we need to tweak the environment a bit:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Allow network access from chroot environment</span>\n<span style=\"color: #81A1C1\">if</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">[[</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">-e</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #A3BE8C\">/etc/resolv.conf</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">]]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">||</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">[[</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">-L</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #A3BE8C\">/etc/resolv.conf</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">]]</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">then</span>\n<span style=\"color: #D8DEE9FF\">  mv </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf.bak</span>\n<span style=\"color: #81A1C1\">fi</span>\n<span style=\"color: #D8DEE9FF\">cat /etc/resolv.conf </span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf</span>\n\n<span style=\"color: #4C566A\"># Extra mounts</span>\n<span style=\"color: #D8DEE9FF\">mount -t proc none </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/proc/</span>\n<span style=\"color: #D8DEE9FF\">mount -t sysfs none </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/sys/</span>\n<span style=\"color: #D8DEE9FF\">mount -o </span><span style=\"color: #88C0D0\">bind</span><span style=\"color: #D8DEE9FF\"> /dev </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/dev/</span>\n\n<span style=\"color: #4C566A\"># prevent daemons from starting during apt-get</span>\n<span style=\"color: #88C0D0\">echo</span><span style=\"color: #D8DEE9FF\"> -e </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">#!/bin/sh\\nexit 101</span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">&gt;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/usr/sbin/policy-rc.d</span>\n<span style=\"color: #D8DEE9FF\">chmod 755 </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/usr/sbin/policy-rc.d</span></code></pre>\n<p>We can now run our script under <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">chroot</code>:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">cp </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">${</span><span style=\"color: #D8DEE9\">CHROOT_SCRIPT</span><span style=\"color: #81A1C1\">}</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/tmp/custom_user_script</span>\n<span style=\"color: #D8DEE9FF\">chroot </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\"> /tmp/custom_user_script</span>\n<span style=\"color: #D8DEE9FF\">rm -f </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/tmp/custom_user_script</span></code></pre>\n<p>This is not very different from RUN lines in a Dockerfile. Here are for instance some commands I would use to setup Docker, Netdata (monitoring) and Fluentbit (logging) on the image:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Add utilities</span>\n<span style=\"color: #D8DEE9FF\">apt-get install --no-install-recommends -y apt-transport-https ca-certificates curl software-properties-common make zip unzip jq</span>\n\n<span style=\"color: #4C566A\"># Install docker</span>\n<span style=\"color: #D8DEE9FF\">curl -L -o /etc/apt/trusted.gpg.d/docker.asc </span><span style=\"color: #ECEFF4\">'</span><span style=\"color: #A3BE8C\">https://download.docker.com/linux/ubuntu/gpg</span><span style=\"color: #ECEFF4\">'</span>\n<span style=\"color: #D8DEE9FF\">add-apt-repository </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">deb [arch=amd64] https://download.docker.com/linux/ubuntu </span><span style=\"color: #ECEFF4\">$(</span><span style=\"color: #A3BE8C\">lsb_release -cs</span><span style=\"color: #ECEFF4\">)</span><span style=\"color: #A3BE8C\"> stable</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">apt-get update</span>\n<span style=\"color: #D8DEE9FF\">apt-get install -y docker-ce docker-ce-cli containerd.io</span>\n<span style=\"color: #D8DEE9FF\">systemctl </span><span style=\"color: #88C0D0\">enable</span><span style=\"color: #D8DEE9FF\"> docker</span>\n\n<span style=\"color: #4C566A\"># Install netdata</span>\n<span style=\"color: #D8DEE9FF\">curl -L -o /etc/apt/trusted.gpg.d/netdata.asc https://packagecloud.io/netdata/netdata/gpgkey</span>\n<span style=\"color: #D8DEE9FF\">add-apt-repository -s </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">deb https://packagecloud.io/netdata/netdata/ubuntu/ bionic main</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">apt-get update</span>\n<span style=\"color: #D8DEE9FF\">apt-get install -y netdata</span>\n\n<span style=\"color: #4C566A\"># Install fluentbit</span>\n<span style=\"color: #D8DEE9FF\">curl -L -o /etc/apt/trusted.gpg.d/fluentbit.asc http://packages.fluentbit.io/fluentbit.key</span>\n<span style=\"color: #D8DEE9FF\">add-apt-repository </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #A3BE8C\">deb http://packages.fluentbit.io/ubuntu/bionic bionic main</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #D8DEE9FF\">apt-get update</span>\n<span style=\"color: #D8DEE9FF\">apt-get install -y td-agent-bit</span></code></pre>\n<p>Note that some packages don't like being installed that way ; e.g. I wasn't able to preinstall Percona server, because it has a post-install script waiting forever on the service to start. YMMV.</p>\n<p>Once we are done, we cleanup out tweaks:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #4C566A\"># Unmount extra mountpoints</span>\n<span style=\"color: #81A1C1\">for</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #D8DEE9\">PT</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">in</span><span style=\"color: #D8DEE9FF\"> dev proc sys</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">do</span>\n<span style=\"color: #D8DEE9FF\">  umount </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #A3BE8C\">/</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">PT</span><span style=\"color: #ECEFF4\">\"</span>\n<span style=\"color: #81A1C1\">done</span>\n\n<span style=\"color: #4C566A\"># Put resolv.conf symlink back in place</span>\n<span style=\"color: #D8DEE9FF\">rm -f  </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf</span>\n<span style=\"color: #81A1C1\">if</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">[[</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">-e</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #A3BE8C\">/etc/resolv.conf.bak</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">]]</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">||</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">[[</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">-L</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #A3BE8C\">/etc/resolv.conf.bak</span><span style=\"color: #ECEFF4\">\"</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #ECEFF4\">]]</span><span style=\"color: #81A1C1\">;</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">then</span>\n<span style=\"color: #D8DEE9FF\">  mv </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf.bak </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/etc/resolv.conf</span>\n<span style=\"color: #81A1C1\">fi</span>\n\n<span style=\"color: #4C566A\"># Clean up policy-rc.d</span>\n<span style=\"color: #D8DEE9FF\">rm -f </span><span style=\"color: #81A1C1\">$</span><span style=\"color: #D8DEE9\">MOUNTPOINT</span><span style=\"color: #D8DEE9FF\">/usr/sbin/policy-rc.d</span></code></pre>\n<h2 id=\"complete-script\"><a href=\"#complete-script\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Complete script</h2>\n<p>Visit <a href=\"https://gist.github.com/matrey/66d697ef540f0da8933a341524ea9fd7\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://gist.github.com/matrey/66d697ef540f0da8933a341524ea9fd7</a> to get <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">ec2-create-ubuntu-ami.sh</code> and <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">ubuntu-bionic-extra.sh</code>.</p>\n<p>Sample usage:</p>\n<pre class=\"shiki\" style=\"background-color: #2e3440\"><code><span style=\"color: #D8DEE9FF\">sudo env AWS_SHARED_CREDENTIALS_FILE=/home/ubuntu/.aws-creds \\</span>\n<span style=\"color: #D8DEE9FF\">bash /home/ubuntu/ec2-create-ubuntu-ami.sh \\</span>\n<span style=\"color: #D8DEE9FF\">--codename bionic --keep-binaries --add-size 1G \\</span>\n<span style=\"color: #D8DEE9FF\">--run-script /home/ubuntu/ubuntu-bionic-extra.sh \\</span>\n<span style=\"color: #D8DEE9FF\">--label ubuntu-docker-host </span><span style=\"color: #81A1C1\">2&gt;&1</span><span style=\"color: #D8DEE9FF\"> </span><span style=\"color: #81A1C1\">|</span><span style=\"color: #D8DEE9FF\"> tee log-docker-ami-2020-10-12.log</span></code></pre>\n<h2 id=\"why-not-\"><a href=\"#why-not-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Why not... ?</h2>\n<h3 id=\"why-not-use-the-official-ami-directly\"><a href=\"#why-not-use-the-official-ami-directly\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Why not use the official AMI directly?</h3>\n<ul>\n<li>Back in 2016 AWS China had no marketplace, you had to build your own AMI</li>\n<li>It allows customizing the instance, and contrary to <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">cloud-config</code>, the instance is ready to use right after boot</li>\n</ul>\n<h3 id=\"why-not-create-an-instance-configure-it-and-make-its-snapshot-into-an-ami\"><a href=\"#why-not-create-an-instance-configure-it-and-make-its-snapshot-into-an-ami\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Why not create an instance, configure it and make its snapshot into an AMI?</h3>\n<ul>\n<li>From prior Windows sysadmin experience, I had to <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">sysprep</code> the master instance to reset the instance-specific SID</li>\n<li>On Linux, it's not very clear what should be removed / cleaned up: bash history, SSH host keys, authorized_keys, but probably also some more arcane things like <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/etc/machine-id</code>, <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">/var/lib/systemd/random-seed</code>, etc. It's much better if they have never been there in the first place.</li>\n</ul>\n<h3 id=\"why-not-use-packer\"><a href=\"#why-not-use-packer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Why not use packer?</h3>\n<ul>\n<li>Scratch your own itch? (:</li>\n<li>What we did is probably similar to Packer's Amazon <code class=\"shiki-inline\" style=\"background: #2e3440; color: #d8dee9\">chroot</code> builder: <a href=\"https://www.packer.io/docs/builders/amazon-chroot\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.packer.io/docs/builders/amazon-chroot</a></li>\n</ul>\n<h2 id=\"references\"><a href=\"#references\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>References</h2>\n<ul>\n<li><a href=\"https://github.com/alestic/alestic-git/blob/master/bin/alestic-git-build-ami\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/alestic/alestic-git/blob/master/bin/alestic-git-build-ami</a> for the overall approach and ec2 commands</li>\n<li><a href=\"https://github.com/kickstarter/build-ubuntu-ami/blob/master/data/user_data.sh.erb\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/kickstarter/build-ubuntu-ami/blob/master/data/user_data.sh.erb</a> for the user script run in chroot</li>\n<li><a href=\"https://blog.tinned-software.net/mount-raw-image-of-entire-disc/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://blog.tinned-software.net/mount-raw-image-of-entire-disc/</a> for how to mount the raw image with losetup</li>\n</ul>\n"}}]}}},"context":{}}